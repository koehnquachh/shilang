// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract AdvancedNFT is ERC721URIStorage, Ownable {
    uint256 public tokenCounter;
    event NFTMinted(uint256 indexed tokenId, address owner);

    constructor() ERC721("AdvancedNFT", "ANFT") {
        tokenCounter = 0;
    }

    // 仅限合约拥有者铸造 NFT
    function mintNFT(address recipient, string memory tokenURI) public onlyOwner returns (uint256) {
        uint256 newTokenId = tokenCounter;
        _mint(recipient, newTokenId);
        _setTokenURI(newTokenId, tokenURI);
        tokenCounter++;
        emit NFTMinted(newTokenId, recipient);
        return newTokenId;
    }
}
